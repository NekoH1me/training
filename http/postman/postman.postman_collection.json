{
	"info": {
		"name": "postman",
		"_postman_id": "ff4e1148-7c41-73be-53f9-0d3061196298",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get books",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "post books",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJSON;",
							"",
							"try { ",
							"    responseJSON = JSON.parse(responseBody); ",
							"    tests['response is valid JSON'] = true;",
							"}",
							"catch (e) { ",
							"    responseJSON = {}; ",
							"    tests['response is valid JSON'] = false;",
							"}",
							"",
							"",
							"tests['response has post data'] = _.has(responseJSON, 'data');",
							"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
							"",
							"tests[\"content-type equals text/plain\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'text/plain');"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"ID\": 1,\r\n\"Title\": \"sample string 2\",\r\n\"Description\": \"sample string 3\",\r\n\"PageCount\": 4,\r\n\"Excerpt\": \"sample string 5\",\r\n\"PublishDate\": \"2017-12-01T16:01:58.3474547+00:00\"\r\n}"
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/Books",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"Books"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "put books",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJSON;",
							"",
							"try { ",
							"    responseJSON = JSON.parse(responseBody); ",
							"    tests['response is valid JSON'] = true;",
							"}",
							"catch (e) { ",
							"    responseJSON = {}; ",
							"    tests['response is valid JSON'] = false;",
							"}",
							"",
							"",
							"tests['response has PUT data'] = _.has(responseJSON, 'data');",
							"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"ID\": 1,\r\n\"Title\": \"sample string 2\",\r\n\"Description\": \"sample string 3\",\r\n\"PageCount\": 4,\r\n\"Excerpt\": \"sample string 5\",\r\n\"PublishDate\": \"2017-12-01T16:01:58.3474547+00:00\"\r\n}"
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/Books/52502500",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"Books",
						"52502500"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "delete books",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJSON;",
							"",
							"try { ",
							"    responseJSON = JSON.parse(responseBody); ",
							"    tests['response is valid JSON'] = true;",
							"}",
							"catch (e) { ",
							"    responseJSON = {}; ",
							"    tests['response is valid JSON'] = false;",
							"}",
							"",
							"",
							"tests['response has PUT data'] = _.has(responseJSON, 'data');",
							"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/Books/52502500",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"Books",
						"52502500"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "get aerobatic",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJSON;",
							"",
							"try { ",
							"    responseJSON = JSON.parse(responseBody); ",
							"    tests['response is valid JSON'] = true;",
							"}",
							"catch (e) { ",
							"    responseJSON = {}; ",
							"    tests['response is valid JSON'] = false;",
							"}",
							"",
							"tests['response json contains headers'] = _.has(responseJSON, 'headers');",
							"tests['response json contains args'] = _.has(responseJSON, 'args');",
							"tests['response json contains url'] = _.has(responseJSON, 'url');",
							"",
							"tests['args key contains argument passed as url parameter'] = ('test' in responseJSON.args);",
							"tests['args passed via request url params has value \"123\"'] = (_.get(responseJSON, 'args.test') === \"123\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "aerobatic",
							"type": "string"
						},
						{
							"key": "password",
							"value": "aerobatic",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://auth-demo.aerobatic.io/protected-standard",
					"protocol": "https",
					"host": [
						"auth-demo",
						"aerobatic",
						"io"
					],
					"path": [
						"protected-standard"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}